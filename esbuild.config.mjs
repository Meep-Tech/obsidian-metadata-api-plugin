import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'

const banner =
`/*
 / THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
 / if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');
const lib = (process.argv[2] === 'library');
const dev = !prod && !lib;

// plugin:
if (!lib) {
  esbuild.build({
    banner: {
      js: banner,
    },
    entryPoints: ['src/plugin.ts'],
    bundle: true,
    external: [
      'obsidian',
      'electron',
      '@codemirror/autocomplete',
      '@codemirror/collab',
      '@codemirror/commands',
      '@codemirror/language',
      '@codemirror/lint',
      '@codemirror/search',
      '@codemirror/state',
      '@codemirror/view',
      '@lezer/common',
      '@lezer/highlight',
      '@lezer/lr',
      ...builtins],
    format: 'cjs',
    watch: dev,
    target: 'es2018',
    logLevel: "info",
    sourcemap: dev 
      ? 'inline'
      : false,
    treeShaking: true,
    outfile: 'build/plugin/main.js',
  }).catch(() => process.exit(1));
} // lib:
else {
  esbuild.build({
    banner: {
      js: banner,
    },
    entryPoints: ['src/lib.ts'],
    bundle: true,
    external: [
      'obsidian',
      'electron',
      '@codemirror/autocomplete',
      '@codemirror/collab',
      '@codemirror/commands',
      '@codemirror/language',
      '@codemirror/lint',
      '@codemirror/search',
      '@codemirror/state',
      '@codemirror/view',
      '@lezer/common',
      '@lezer/highlight',
      '@lezer/lr',
      ...builtins],
    format: 'cjs',
    watch: dev,
    target: 'es2018',
    logLevel: "info",
    sourcemap: dev 
      ? 'inline'
      : false,
    treeShaking: true,
    outfile: 'build/lib/main.js',
  }).catch(() => process.exit(1));
}
